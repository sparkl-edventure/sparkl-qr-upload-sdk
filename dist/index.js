import m from'qrcode';import {v4}from'uuid';// QR Upload SDK - https://github.com/your-org/qr-upload-sdk

async function l(a,e={}){let{size:r=200,color:t="#000000",backgroundColor:i="#ffffff",errorCorrectionLevel:n="H",margin:o=1}=e,d=typeof a=="string"?a:JSON.stringify(a);try{let s=document.createElement("canvas");return await m.toCanvas(s,d,{width:r,color:{dark:t,light:i},errorCorrectionLevel:n,margin:o}),s.toDataURL("image/png")}catch(s){throw console.error("Failed to generate QR code:",s),new Error("Failed to generate QR code")}}function c(){return `sess_${v4().replace(/-/g,"")}`}function p(a,e="/qr-upload",r){let t=new URL(e,a);return r&&t.searchParams.append("sessionId",r),t.toString()}var g=class{constructor(e){this.images=[];this.container=null;this.sessionId="";this.isInitialized=false;this.videoElement=null;this.mediaStream=null;this.config=e||this.getDefaultConfig(),this.sessionId=c();}getDefaultConfig(){return {frontendUrl:typeof window<"u"?window.location.origin:"",sdkRoute:"/qr-upload",uploadApi:{url:"/api/upload",headers:{"Content-Type":"multipart/form-data"}},autoStartCamera:true,maxImages:10,allowedMimeTypes:["image/jpeg","image/png","image/webp"]}}init(e){this.config={...this.getDefaultConfig(),...e},this.sessionId=c(),this.isInitialized=true;}mount(e){if(!this.isInitialized)throw new Error("QrUpload must be initialized with init() before mounting");this.container=e,this.renderInterface(),this.config.autoStartCamera&&this.startCamera().catch(r=>{console.warn("Failed to start camera automatically:",r);});}unmount(){this.stopCamera(),this.container&&(this.container.innerHTML="",this.container=null);}async startCamera(){if(this.ensureInitialized(),!this.mediaStream)try{this.mediaStream=await navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"},audio:!1}),this.videoElement&&(this.videoElement.srcObject=this.mediaStream,await this.videoElement.play());}catch(e){throw this.handleError(new Error(`Failed to start camera: ${e instanceof Error?e.message:String(e)}`)),e}}stopCamera(){this.mediaStream&&(this.mediaStream.getTracks().forEach(e=>e.stop()),this.mediaStream=null),this.videoElement&&(this.videoElement.srcObject=null);}async captureImage(){if(this.ensureInitialized(),!this.videoElement)throw new Error("Video element not initialized");let e=document.createElement("canvas");e.width=this.videoElement.videoWidth,e.height=this.videoElement.videoHeight;let r=e.getContext("2d");if(!r)throw new Error("Could not get canvas context");return r.drawImage(this.videoElement,0,0,e.width,e.height),new Promise((t,i)=>{e.toBlob(n=>{n?t(n):i(new Error("Failed to capture image"));},"image/jpeg",.9);})}async uploadImage(e){this.ensureInitialized();let r=new FormData;r.append("file",e);let t=`img-${Date.now()}`,i={id:t,previewUrl:URL.createObjectURL(e),file:e,status:"pending"};this.images.push(i),this.updateImageStatus(t,"uploading");try{let n=await fetch(this.config.uploadApi.url,{method:"POST",headers:this.config.uploadApi.headers,body:r});if(!n.ok)throw new Error(`Upload failed with status ${n.status}`);let o=await n.json();return this.updateImageStatus(t,"uploaded"),this.config.onUploadComplete&&this.config.onUploadComplete(o),o}catch(n){let o=n instanceof Error?n.message:"Unknown error";throw this.updateImageStatus(t,"error",void 0,o),this.handleError(new Error(`Upload failed: ${o}`)),n}}generateQrUrl(){return this.ensureInitialized(),p(this.config.frontendUrl,this.config.sdkRoute||"/qr-upload",this.sessionId)}async generateQrCode(e={}){this.ensureInitialized();let r=this.generateQrUrl();return l(r,{size:e.size??200,color:e.color??"#000000",backgroundColor:e.backgroundColor??"#ffffff",errorCorrectionLevel:e.errorCorrectionLevel??"H",margin:e.margin??1})}ensureInitialized(){if(!this.isInitialized)throw new Error("QrUpload must be initialized with init() before use")}handleError(e){console.error("QrUpload Error:",e),this.config.onError&&this.config.onError(e);}updateImageStatus(e,r,t,i){let n=this.images.find(o=>o.id===e);n&&(n.status=r,t?.progress!==void 0&&(n.progress=t.progress),i&&(n.error=i),this.renderInterface());}renderInterface(){if(!this.container)return;this.container.innerHTML=`
      <div class="qr-upload-container">
        <div class="camera-preview">
          <video class="video-preview" autoplay playsinline></video>
          <button class="capture-button">Capture</button>
        </div>
        <div class="preview-container"></div>
        <div class="status"></div>
      </div>
    `,this.videoElement=this.container.querySelector(".video-preview"),this.renderPreviews();let e=this.container.querySelector(".capture-button");e&&e.addEventListener("click",async()=>{try{let r=await this.captureImage(),t=new File([r],`capture-${Date.now()}.jpg`,{type:"image/jpeg"});await this.uploadImage(t);}catch(r){this.handleError(r instanceof Error?r:new Error(String(r)));}}),this.config.autoStartCamera&&this.videoElement&&this.startCamera().catch(r=>{this.handleError(r instanceof Error?r:new Error(String(r)));});}renderPreviews(){if(!this.container)return;let e=this.container.querySelector(".preview-container");e&&(e.innerHTML="",this.images.forEach((r,t)=>{let i=document.createElement("div");i.className="preview-item",i.draggable=true,i.dataset.index=String(t),i.innerHTML=`
      <img src="${r.previewUrl}" alt="preview" />
      <button class="remove-btn" title="Remove">&times;</button>
    `,i.addEventListener("dragstart",o=>{o.dataTransfer?.setData("text/plain",String(t));}),i.addEventListener("dragover",o=>{o.preventDefault();}),i.addEventListener("drop",o=>{o.preventDefault();let d=Number(o.dataTransfer?.getData("text/plain")),s=Number(o.currentTarget.dataset.index);!Number.isNaN(d)&&!Number.isNaN(s)&&d!==s&&this.reorderImages(d,s);}),i.querySelector(".remove-btn")?.addEventListener("click",()=>{this.removeImage(r.id);}),e.appendChild(i);}));}reorderImages(e,r){if(e<0||e>=this.images.length||r<0||r>=this.images.length)return;let t=this.images[e];this.images.splice(e,1),this.images.splice(r,0,t),this.renderPreviews();}removeImage(e){let r=this.images.findIndex(t=>t.id===e);r!==-1&&(this.images.splice(r,1),this.renderPreviews());}};function f(a){let e=new g;return e.init(a),e}var U=(a,e={})=>l(a,{size:e.size||200,color:e.color||"#000000",backgroundColor:e.backgroundColor||"#ffffff",errorCorrectionLevel:e.errorCorrectionLevel||"H",margin:e.margin??1}),S=g;export{g as QrUpload,S as default,U as generateQrCode,p as generateQrUrl,c as generateSessionId,f as initQrUpload};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map